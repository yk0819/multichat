import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Locale;

public class ChatSocketThread extends Thread {
	
	int port;
	BufferedWriter out = null;	
	BufferedReader in = null;
	Socket socket = null;	

	PrintWriter pw = null;
	FileWriter fw = null;
	File log = null;
	
	List<PrintWriter> userList = null;
	
	public ChatSocketThread(Socket socket, List userList) {
		this.socket = socket;

		try {
			this.userList = userList;
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	@SuppressWarnings("unchecked")
	@Override
	public void run() {
		System.out.println("== ChatSocketThread START ==");

		try { // 상대방 정보 얻어오기
			InetSocketAddress isa = (InetSocketAddress) socket.getRemoteSocketAddress();
			System.out.println("IP: " + isa.getHostName() + ", port: " + socket.getLocalPort());

			// 입출력
			out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
			in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			
			out.write("입장을 환영합니다.");
			out.write("\r\n");
			out.flush();
			
			// 화면에 출력
			String readValue; // 클라이언트에서 보낸 값을 저장하기

			while((readValue = in.readLine()) != null ) { // 클라이언트에서 받은 메세지를 출력
				System.out.println(readValue);				
				// 클라이언트에게 메세지를 보냄
				// 리시브 메서드를 만들어서...
				receive(readValue);
			}
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			try {
				if(out != null)out.close();
				if(in  != null)in.close();
				if(!socket.isClosed())socket.close();
			}catch (IOException e) {
			}
			System.out.println("== ChatSocketThread END ==");
		}
	}
	public void receive(String text) { // 매개변수를 주어서 입력받은 값을 보내도록..
		
		for(PrintWriter pw : userList) { // 리스트에 추가된 유저에게 보내기, 향상된 for문
			pw.println(text);
			pw.flush();
		}
	}
}
