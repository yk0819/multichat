import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONObject;

public class InfoSocketThread extends Thread {

	int port;
	BufferedWriter out = null;	
	BufferedReader in = null;
	Socket socket = null;
	
	public InfoSocketThread(Socket socket) {
		this.socket = socket;
	}

	@SuppressWarnings("unchecked")
	@Override
	public void run() {
	
		try {
			System.out.println("== InfoSocketThread START ==");
	
			List<String> list = new ArrayList<String>(); // 접속가능한 리스트 제시
			list.add("8000");
			list.add("8001");
			list.add("8002");
			list.add("8003");
			list.add("8004");
			list.add("8005");
			list.add("8006");
			list.add("8007");
			list.add("8008");
			list.add("8009");
	
			
			// 여기는 어레이 리스트로(추가는 put?)
			JSONArray arr = new JSONArray();
			for (int i = 0; i < list.size(); i++) {
				arr.put(list.get(i));
			}
			
			// try catch
			JSONObject objList = new JSONObject();
			objList.put("port_list", list);
		
			// 상대방 정보
			InetSocketAddress isa = (InetSocketAddress) socket.getRemoteSocketAddress();
			System.out.println("IP: " + isa.getHostName() + ", port: " + socket.getLocalPort());

			// 입출력
			out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
			in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
			
			String readValue;
			if((readValue = in.readLine()) != null ) { // 공백이 아니면 입력값을 출력
				if(readValue.equals("port_list")) {
					System.out.println(objList.toString());
					out.write(objList.toString());
					out.write("\n");
					out.flush();
				}
			} // if문 종료
			
		} catch (Exception e) {
			System.out.println(e);
		} finally {
			try {
				if(out != null)out.close();
				if(in  != null)in.close();
				if(!socket.isClosed())socket.close();
			}catch (IOException e) {
			}
			System.out.println("== InfoSocketThread END ==");
		}
	}
}
